;; ***************************************************
;; Gareth Sharpe (20337731)
;; CS 135 Winter 2016
;; Assignment 03, Question 3
;; ***************************************************

;; A 3dPosn is a (make-3dposn Num Num Num)

(define-struct 3dPosn (x y z))

;; (define (area-triangle a b c)) returns the area of
;; a 3 dimensional triangle where a, b, and c represent
;; the side lengths of the triangle. Returns 'undefined
;; if coordiantes do not produce a triangle.

;; area-triangle 3dPosn 3dPosn 3dPosn -> (anof Num 'undefined)

;; Examples:
(check-within (area-triangle (make-3dPosn -5 5 -5) (make-3dPosn 1 -6 6) (make-3dPosn 2 -3 4)) 19.306 001)
(check-expect (area-triangle (make-3dPosn 1 2 3) (make-3dPosn 4 5 6) (make-3dPosn 7 8 9)) 'undefined)

(define (the-length-from first-3dPosn second-3dPosn)
  (sqrt
   (+ (sqr (- (3dPosn-x second-3dPosn) (3dPosn-x first-3dPosn)))
      (sqr (- (3dPosn-y second-3dPosn) (3dPosn-y first-3dPosn)))
      (sqr (- (3dPosn-z second-3dPosn) (3dPosn-z first-3dPosn))))))

(define (area-triangle a b c)
  (* (/ 1 4) (sqrt (* (cond
                        [(< 0 (+ (the-length-from b c)
                                 (the-length-from a c)
                                 (the-length-from a b)))
                         
                         (+ (the-length-from b c) ; Finds length A
                            (the-length-from a c) ; Finds length B
                            (the-length-from a b))] ; Finds length C
                        [else 'undefined])
                      
                      (cond
                        [(< 0 (- (+ (the-length-from a c)
                                    (the-length-from a b))
                                 (the-length-from c b)))
                         
                         (- (+ (the-length-from a c)
                               (the-length-from a b))
                            (the-length-from c b))]
                        [else 'undefined])
                      
                      (cond
                        [(< 0 (- (+ (the-length-from a b)
                                    (the-length-from b c))
                                 (the-length-from a c)))
                         
                         (- (+ (the-length-from a b)
                               (the-length-from b c))
                            (the-length-from a c))]
                        [else 'undefined])
                      
                      (cond
                        [(< 0 (- (+ (the-length-from b c)
                                    (the-length-from a c))
                                 (the-length-from a b)))
                         
                         (- (+ (the-length-from b c)
                               (the-length-from a c))
                            (the-length-from a b))]
                        [else 'undefined])))))


(area-triangle (make-3dPosn -5 5 -5) (make-3dPosn 1 -6 6) (make-3dPosn 2 -3 4))
(area-triangle (make-3dPosn 1 2 3) (make-3dPosn 4 5 6) (make-3dPosn 7 8 9))
